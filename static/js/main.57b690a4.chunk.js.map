{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","Captilize","msg","Navbar","switchmode","mode","href","title","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","about","placeholder","onClick","toggleMode","htmlFor","TextForm","text","setText","useState","prev","setprev","style","backgroundColor","color","heading","onChange","event","console","log","target","value","rows","uppercasecon","newtext","Lowercase","cleartext","countdigit","c","i","length","isNaN","countspecial","trim","split","defaultProps","App","setMode","setAlert","showAlert","setTimeout","Fragment","document","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.57b690a4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n   \r\n    const Captilize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n      }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n  <strong>{Captilize(props.alert.type)}</strong>:{props.alert.msg}\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Alert","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { a } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  const switchmode = props.mode === 'light'?'Dark mode':'Light mode'\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto\">\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-a\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n          <li className=\"nav-item active\">\r\n            <a className=\"nav-a\" href=\"/about\">{props.about}<span className=\"sr-only\">(current)</span></a>\r\n          </li>\r\n        </ul>\r\n        <form className=\"d-flex ms-auto my-2 my-lg-0 mx-2\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >{switchmode}</label>\r\n</div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  about: PropTypes.string\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title',\r\n  about: 'About text here'\r\n};\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n   const [text, setText] = useState(\"Text area\")\r\n   const [prev,setprev]=useState(' ')\r\n   const handleOnChange = (event)=>{\r\n    console.log(\"Clicked handle on change\");\r\n    setText(event.target.value)\r\n   }\r\n\r\n   const Lowercase= () =>\r\n   {\r\n      console.log(\"Lower case\");\r\n      setText(text.toLowerCase());\r\n   }\r\n\r\n   const uppercasecon = ()=>\r\n   {\r\n    console.log(\"Upper case\");\r\n    let newtext=text.toUpperCase();\r\n    setText(newtext);\r\n   }\r\n\r\n   const cleartext=()=>\r\n   {\r\n    setText(' ');\r\n   }\r\n\r\n   const countdigit = ()=>\r\n   {\r\n    let c=0;\r\n    for(let i=0 ;i<text.length;i++)\r\n    {\r\n      if(!isNaN(text[i]) && text[i]!==' ')\r\n        c=c+1;\r\n    }\r\n    setprev('Nummber of digits :'+c);\r\n   }\r\n\r\n   const countspecial = ()=>\r\n    {\r\n     let c=0;\r\n     for(let i=0 ;i<text.length;i++)\r\n     {\r\n       if(isNaN(text[i]) && text[i]!==' ' && !(text[i] >= 'A' && text[i] <= 'Z') && !(text[i] >= 'a' && text[i] <= 'z'))\r\n         c=c+1;\r\n     }\r\n     setprev('Nummber of special characters :'+c);\r\n    }\r\n  return (\r\n    <div className='container' style={{backgroundColor:props.mode==='dark'?'black':'white', color:props.mode==='light'?'black':'white'}}>\r\n    <h1>{props.heading}</h1>\r\n<div className=\"mb-3\" >\r\n  <label htmlFor=\"mybox\" className=\"form-label\">Example textarea</label>\r\n  <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'black':'white', color:props.mode==='light'?'black':'white'}} rows=\"8\" value={text}></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick={uppercasecon}>Convert to uppercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={Lowercase}>Convert to lowercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={cleartext}>Clear text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={countdigit}>Number of digits</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={countspecial}>Number of special characters</button>\r\n<div className='Textcontainer my-1'>\r\n  <h2>Text summary</h2>\r\n<p>{text===''?0:text.trim().split(/\\s+/).length} words and {text.length} characters</p>\r\n<div>\r\n\r\n{prev}\r\n</div>\r\n<h2>Preview</h2>\r\n{text}\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport AboutUs from './components/AboutUs';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert('Dark mode is enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode is enabled', 'success');\n    }\n  };\n\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  return (\n    <>\n      <Navbar title=\"NavText\" about=\"About us\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* You can choose which component to render here */}\n        <TextForm heading=\"Enter text to analyze\" mode={mode} />\n        {/* <AboutUs /> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}